#include <semaphore.h>
#include <pthread.h>
#include <stdio.h>

sem_t mutex, full, empty;
int buffer[5], in, out;

void* producer(void* arg) { sem_wait(&empty); sem_wait(&mutex); buffer[in++] = 1; printf("Produced item. Buffer: [%d %d %d %d %d]\n", buffer[0], buffer[1], buffer[2], buffer[3], buffer[4]); sem_post(&mutex); sem_post(&full); }

void* consumer(void* arg) { sem_wait(&full); sem_wait(&mutex); buffer[out++] = 0; printf("Consumed item. Buffer: [%d %d %d %d %d]\n", buffer[0], buffer[1], buffer[2], buffer[3], buffer[4]); sem_post(&mutex); sem_post(&empty); }

int main() { sem_init(&mutex, 0, 1); sem_init(&full, 0, 0); sem_init(&empty, 0, 5); pthread_t prod, cons; pthread_create(&prod, NULL, producer, NULL); pthread_create(&cons, NULL, consumer, NULL); pthread_join(prod, NULL); pthread_join(cons, NULL); }

